---
export interface Props {
	title: string;
	body: string;
	rating: number;
}

const { title, author, rating } = Astro.props;

// const handelDeleteButton = () => {
// 	fetch("localhost:5000/books/delete", {
// 		method: "POST",
// 	 	body: JSON.stringify({title: title, author: author, rating: rating})
// 	})
// }
---

<li class="link-card">
	<h2>
		<span>{title}</span>
	</h2>
	<p>
		{author}
	</p>
	<span>{rating}</span>
	<script>
		// Find all buttons with the `alert` class on the page.
		// Handle clicks on each button.
		const buttons = document.querySelectorAll("button.delete");
		// console.log(button);
		buttons.forEach((button) => {
			button.addEventListener("click", () => {
				console.log("clicked");
				// console.log(button.dataset.title);
				fetch("http://localhost:5000/books/delete", {
					method: "DELETE",
					headers: {
						"Content-Type": "application/json",
						// 'Content-Type': 'application/x-www-form-urlencoded',
					},
					body: JSON.stringify({
						name: button.dataset.title,
					}),
				}).then((res) => {
					console.log(res);
					if (res.status === 200) {
						console.log("deleted");
						window.location.reload();
					}
				});
			});
		});
	</script>

	<button class="delete" data-title={title}>
		<svg
			aria-hidden="true"
			fill="none"
			stroke="currentColor"
			stroke-width="1.5"
			viewBox="0 0 24 24"
			xmlns="http://www.w3.org/2000/svg"
		>
			<path
				d="M6 18L18 6M6 6l12 12"
				stroke-linecap="round"
				stroke-linejoin="round"></path>
		</svg></button
	>
</li>
<style>
	.link-card {
		list-style: none;
		display: flex;
		padding: 0.15rem;
		background-color: white;
		background-image: var(--accent-gradient);
		background-size: 400%;
		border-radius: 0.5rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
			0 2px 4px -2px rgba(0, 0, 0, 0.1);
		min-height: 4rem;
	}

	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: 1rem 1.3rem;
		border-radius: 0.35rem;
		color: #111;
		background-color: white;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
		color: #444;
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent));
	}
</style>
